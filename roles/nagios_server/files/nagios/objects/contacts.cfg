###############################################################################
# CONTACTS.CFG - SAMPLE CONTACT/CONTACTGROUP DEFINITIONS
#
# Last Modified: 05-31-2007
#
# NOTES: This config file provides you with some example contact and contact
#        group definitions that you can reference in host and service
#        definitions.
#       
#        You don't need to keep these definitions in a separate file from your
#        other object definitions.  This has been done just to make things
#        easier to understand.
#
###############################################################################



###############################################################################
###############################################################################
#
# CONTACTS
#
###############################################################################
###############################################################################

# Just one contact defined by default - the Nagios admin (that's you)
# This contact definition inherits a lot of default values from the 'generic-contact' 
# template which is defined elsewhere.

define contact{
        contact_name                    nagiosadmin		; Short name of user
	use				generic-contact		; Inherit default values from generic-contact template (defined above)
        alias                           Nagios Admin		; Full name of user

        email                           name@product.com	; <<***** CHANGE THIS TO YOUR EMAIL ADDRESS ******
        service_notifications_enabled   0
        host_notifications_enabled      0
        }


define contact{
        contact_name                    project
        use                             generic-contact
        alias                           No Name
        service_notifications_enabled   0
        host_notifications_enabled      0
        service_notification_period     24x7
        host_notification_period        24x7
        service_notification_options    c,w,r
        host_notification_options       d,u,r
        email                           name@product.com
        }


define contact{
        contact_name                    contactgroup
        use                             generic-contact
        alias                           contactgroup group
        service_notifications_enabled   0
        host_notifications_enabled      0
        service_notification_period     24x7
        host_notification_period        24x7
        service_notification_options    c,w,r
        host_notification_options       d,u,r
        email                           contactgroups@product.com
        }

define contact{
        contact_name                    project-dashboard
        use                             generic-contact
        alias                           project-dashboard group
        service_notifications_enabled   0
        host_notifications_enabled      0
        service_notification_period     24x7
        host_notification_period        24x7
        service_notification_options    c,w,r
        host_notification_options       d,u,r
	email                           name@product.com
        }

define contact{
        contact_name                    project-developers
        use                             generic-contact
        alias                           project-developers group
        service_notifications_enabled   1
        host_notifications_enabled      1
        service_notification_period     24x7
        host_notification_period        24x7
        service_notification_options    c,w,r
        host_notification_options       d,u,r
	email                           name.LB.Dev@product.com
        }

###############################################################################
###############################################################################
#
# CONTACT GROUPS
#
###############################################################################
###############################################################################

# We only have one contact in this simple configuration file, so there is
# no need to create more than one contact group.

define contactgroup{
        contactgroup_name       admins
        alias                   Nagios Administrators
        members                 nagiosadmin
        }

define contactgroup{
        contactgroup_name       project-dashboard
        alias                   project-dashboard Group
        members                 project-dashboard
        }

define contactgroup{
        contactgroup_name       contactgroup
        alias                   contactgroup Group
        members                 contactgroup
        }

define contactgroup{
        contactgroup_name       project
        alias                   project Group
        members                 project
        }

define contactgroup{
        contactgroup_name       project-developers
        alias                   project-developers Group
        members                 project-developers
        }
